
<% content_for :title, "センサ設定" %>
<div class="row">
  <div class="col-sm-6">
    <table class="table">
  <tr>
    <th>ID</th>
    <td><%= @setting.raspi_id %></td>
  </tr>
  <tr>
    <th><%= t("activerecord.attributes.setting.name") %></th>
    <td><%= @setting.name %></td>
  </tr>
  <tr>
    <th><%= t("activerecord.attributes.setting.min_tmpr") %></th>
    <td><%= @setting.min_tmpr %></td>
  </tr>
  <tr>
    <th><%= t("activerecord.attributes.setting.max_tmpr") %></th>
    <td><%= @setting.max_tmpr %></td>
  </tr>
  <tr>
    <th><%= t("activerecord.attributes.setting.token4write") %></th>
    <td><div class="well well-sm"><%= @setting.token4write %></div>
    </td>
  </tr>
  <tr>
    <th><%= t("activerecord.attributes.setting.token4read") %></th>
    <td><div class="well well-sm"><%= @setting.token4read %></div>
      <script>
      function generate_token4read(){
        $.get(location.pathname+"/publish",function(d){
          location.reload();
        });
      }
      function delete_token4read(){
        $.get(location.pathname+"/unpublish",function(d){
          location.reload();
        });
      }
      </script>
      <% if @setting.readable? %>
        <button class="btn btn-success btn-xs" onclick="generate_token4read();">再生成</button>
        <button class="btn btn-danger btn-xs" onclick="delete_token4read();">削除</button>
      <% else %>
        <button class="btn btn-success btn-xs" onclick="generate_token4read();">生成</button>
      <% end %>
    </td>
  </tr>
  <tr>
    <th><%= t("activerecord.attributes.setting.created_at") %></th>
    <td><%= @setting.created_at %></td>
  </tr>
  <tr>
    <th><%= t("activerecord.attributes.setting.updated_at") %></th>
    <td><%= @setting.updated_at %></td>
  </tr>
    </table>
  </div>
</div>
<h3>Raspberry Pi</h3>


<p>当プロジェクトのプログラム(mukoyama_bme280.py)を利用する場合、同プログラムをRaspberryPiに配備してから(「<%= link_to '参加方法', howto_path %>」参照)、以下の設定をcrontabに登録してください。
Raspbianの規定の設定では、/var/log/syslogに処理ログが出力されますので、ここで正常にコマンドが動いていることを確認してください。</p>
<pre>
MUKOYAMA_URL=<%= baseurl %>
MUKOYAMA_ID=<%= @setting.raspi_id %>
MUKOYAMA_TOKEN=<%= @setting.token4write %>
*/10 * * * * python $HOME/bin/mukoyama_bme280.py 2>&amp;1 | logger -p cron.info -t "mukoyama"
</pre>
<p>カメラを接続する場合は以下の行も追加します。撮影にはraspistillコマンドを利用しています（画質等の設定調整は同コマンドのマニュアルを参照してください）。</p>
<pre>
* * * * * ruby $HOME/bin/mukoyama_camera.rb 2>&amp;1 | logger -p cron.info -t "mukoyama"
</pre>
<p>以下はRaspberryPiにスクリプトを導入するまでの手順の例です。必ずしもこの通りに実行する必要はありません。</p>
<pre>
sudo raspi-config
  # ssh,camera,i2cを有効化
  # keyboard layoutとtimezonをJapanに
vi /etc/wpa_supplicant/wpa_supplicant.conf
  # network={ssid="your-ssid" psk="your-pre-shared-key"}
sudo apt-get install ruby
mkdir bin &amp;&amp; cd bin
curl -O <%= baseurl %>/mukoyama_camera.rb
</pre>
<p>Wifiに接続済みでsshが有効化されていれば、以下のコマンドで他の端末から接続可能です。</p>
<pre>
  ssh pi@raspberrypi.local
</pre>
<p>以下はRaspbianのSDカードを作成するためのコマンドのメモ書きです。
  ディスクイメージは<a href="https://www.raspberrypi.org/downloads/raspbian/">Raspberry Pi公式サイト</a>で入手可能です。
  デバイスの番号は環境ごとに違います。
<strong>絶対にこのままコピーして利用しないでください。</strong><code>diskutil list</code>でデバイス番号を確認してください。</p>
<pre>
diskutil umountDisk /dev/disk2
sudo dd bs=1m if=Binaries/2016-11-25-raspbian-jessie-lite.img of=/dev/rdisk2
</pre>

<h3>ESP8266</h3>
<p>mukoyama_esp8266.inoを利用する場合は、IDとトークンを以下のように設定します。</p>
<pre>
const char* host = "<%= request.host %>";
const int httpsPort = <%= request.port.to_s %>;
const char* mukoyama_id    = "<%= @setting.raspi_id %>";
const char* mukoyama_token = "<%= @setting.token4write %>";
</pre>
<p>
<%= link_to t('edit'), edit_setting_path(@setting), class: "btn btn-default" %>
<%= link_to t('back'), settings_path, class: "btn btn-default" %>
</p>
